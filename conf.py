"""Contains helper functions for retrieving configuration."""

import json
import logging
import os

CONFIG_DIR = "~/.config/gcal-discord-poster"
CONFIG_FILE_NAME = "config.json"

LOG = logging.getLogger("gcal-discord-poster")


def setup_config_dir(config_dir: str = CONFIG_DIR):
    """Makes sure the config directory exists."""

    real_config_dir = os.path.expanduser(config_dir)

    if not os.path.exists(real_config_dir):
        os.makedirs(real_config_dir)
    elif not os.path.isdir(real_config_dir):
        msg = "Unable to setup config dir at '%s'"
        LOG.error(msg, config_dir)
        raise RuntimeError(msg % config_dir)


def get_config_path(
        config_dir: str = CONFIG_DIR,
        config_file_name: str = CONFIG_FILE_NAME
):
    """Builds a filepath to the config directory."""

    return os.path.join(os.path.expanduser(config_dir), config_file_name)


def get_config(
        config_dir: str = CONFIG_DIR,
        config_file_name: str = CONFIG_FILE_NAME
) -> dict:
    """Reads the autogenerated config file from the filesystem.

    If the parent config directory doesn't exist, one will be created. The
    config file itself is simply a json file that contains auth information
    and user preferences.
    """

    setup_config_dir(config_dir)
    config_path = get_config_path(config_dir, config_file_name)

    if os.path.isdir(config_path):
        msg = "Config path at '%s' is a directory."
        LOG.error(msg, config_path)
        raise RuntimeError(msg % config_path)

    if os.path.isfile(config_path):
        with open(config_path, "rb") as file:
            config = json.load(file)
    else:
        config = {}

    return config


def save_config(
        config,
        config_dir: str = CONFIG_DIR,
        config_file_name: str = CONFIG_FILE_NAME
):
    """Saves a config to the filesystem.

    If the parent config directory doesn't exist, one will be created. The
    existing config file, if present, will be completely overwritten.
    """

    setup_config_dir(config_dir)
    config_path = get_config_path(config_dir, config_file_name)

    if os.path.isdir(config_path):
        msg = "Config path at '%s' is a directory."
        LOG.error(msg, config_path)
        raise RuntimeError(msg % config_path)

    with open(config_path, "wb") as file:
        json.dump(config, file, indent=4, sort_keys=True)
